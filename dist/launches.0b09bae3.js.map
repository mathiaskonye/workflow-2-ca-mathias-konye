{"version":3,"sources":["launches.js"],"names":["baseUrl","fetch","then","response","json","upcomingLaunches","catch","error","console","log","dir","launches","document","querySelector","forEach","launch","timestamp","launch_date_unix","date","Date","formatted","getDate","slice","getMonth","getFullYear","payloadMass","rocket","second_stage","payloads","payload_mass_kg","html","mission_name","rocket_name","payload_type","innerHTML"],"mappings":"AAAAA,OAAO,GAAG,iDAAV;AAEAC,KAAK,CAACD,OAAD,CAAL,CACCE,IADD,CACM,UAASC,QAAT,EAAmB;AACrB,SAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,CAHH,EAIGF,IAJH,CAIQ,UAASE,IAAT,EAAe;AACnBC,EAAAA,gBAAgB,CAACD,IAAD,CAAhB;AACD,CANH,EAOGE,KAPH,CAOS,UAASC,KAAT,EAAgB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,CATH;;AAWA,SAASF,gBAAT,CAA0BD,IAA1B,EAAgC;AAC9BI,EAAAA,OAAO,CAACE,GAAR,CAAYN,IAAZ;AAEA,MAAIO,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAf;AAEFT,EAAAA,IAAI,CAACU,OAAL,CAAa,UAASC,MAAT,EAAiB;AAE1B,QAAMC,SAAS,GAAGD,MAAM,CAACE,gBAAzB;AACA,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASH,SAAS,GAAG,IAArB,CAAb;AACA,QAAMI,SAAS,GAAG,CAAC,MAAMF,IAAI,CAACG,OAAL,EAAP,EAAuBC,KAAvB,CAA6B,CAAC,CAA9B,IAAmC,KAAnC,GAA2C,CAAC,OAAOJ,IAAI,CAACK,QAAL,KAAkB,CAAzB,CAAD,EAA8BD,KAA9B,CAAoC,CAAC,CAArC,CAA3C,GAAqF,KAArF,GAA6FJ,IAAI,CAACM,WAAL,EAA/G;AAEA,QAAIC,WAAW,GAAG,KAAlB;;AAEJ,QAAIV,MAAM,CAACW,MAAP,CAAcC,YAAd,CAA2BC,QAA3B,CAAoC,CAApC,EAAuCC,eAAvC,IAA0D,IAA9D,EAAoE;AAC9Dd,MAAAA,MAAM,CAACW,MAAP,CAAcC,YAAd,CAA2BC,QAA3B,CAAoC,CAApC,EAAuCC,eAAvC,GAAyDJ,WAAzD;AACD;;AAED,QAAIK,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,4GAEsCf,MAAM,CAACgB,YAF7C,gFAGoDX,SAHpD,uEAI4CL,MAAM,CAACW,MAAP,CAAcM,WAJ1D,oEAKyCjB,MAAM,CAACW,MAAP,CAAcC,YAAd,CAA2BC,QAA3B,CAAoC,CAApC,EAAuCK,YALhF,oEAMyClB,MAAM,CAACW,MAAP,CAAcC,YAAd,CAA2BC,QAA3B,CAAoC,CAApC,EAAuCC,eANhF,+BAAJ;AASAlB,IAAAA,QAAQ,CAACuB,SAAT,IAAsBJ,IAAtB;AACD,GAvBH;AAwBC","file":"launches.0b09bae3.js","sourceRoot":"..","sourcesContent":["baseUrl = \"https://api.spacexdata.com/v3/launches/upcoming\";\n\nfetch(baseUrl)\n.then(function(response) { \n    return response.json();\n  })\n  .then(function(json) {\n    upcomingLaunches(json);\n  })\n  .catch(function(error) {\n    console.log(error);\n  });\n\nfunction upcomingLaunches(json) {\n  console.dir(json);\n\n  let launches = document.querySelector(\".liveFeed\");\n\njson.forEach(function(launch) { \n\n    const timestamp = launch.launch_date_unix;\n    const date = new Date(timestamp * 1000);\n    const formatted = ('0' + date.getDate()).slice(-2) + ' - ' + ('0' + (date.getMonth() + 1)).slice(-2) + ' - ' + date.getFullYear();\n\n    let payloadMass = \"TBA\";\n\nif (launch.rocket.second_stage.payloads[0].payload_mass_kg == null) {\n      launch.rocket.second_stage.payloads[0].payload_mass_kg = payloadMass;\n    }\n\n    let html = \"\";\n    html += `\n             <div class=\"mission-details\">\n                   <h1 class=\"mission-name\">${launch.mission_name}</h1>\n                   <p class=\"launch-date\">Launch Date:<br>${formatted}</p>\n                   <p class=\"rocket-type\">Rocket: ${launch.rocket.rocket_name}</p>\n                   <p class=\"payload\">Payload: ${launch.rocket.second_stage.payloads[0].payload_type}</p>\n                   <p class=\"mass-kg\">Mass KG: ${launch.rocket.second_stage.payloads[0].payload_mass_kg}</P>\n              </div>`;\n\n    launches.innerHTML += html;\n  });\n}\n\n"]}